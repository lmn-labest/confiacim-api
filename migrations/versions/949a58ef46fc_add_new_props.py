"""Add new props

Revision ID: 949a58ef46fc
Revises: a14583722acf
Create Date: 2024-10-17 22:59:19.872101

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "949a58ef46fc"
down_revision: Union[str, None] = "a14583722acf"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("materials_base_case_average_prop", sa.Column("thermal_expansion_c", sa.Float(), nullable=True))
    op.add_column("materials_base_case_average_prop", sa.Column("thermal_conductivity_c", sa.Float(), nullable=True))
    op.add_column(
        "materials_base_case_average_prop", sa.Column("volumetric_heat_capacity_c", sa.Float(), nullable=True)
    )
    op.add_column("materials_base_case_average_prop", sa.Column("friction_angle_c", sa.Float(), nullable=True))
    op.add_column("materials_base_case_average_prop", sa.Column("cohesion_c", sa.Float(), nullable=True))
    op.add_column("materials_base_case_average_prop", sa.Column("thermal_expansion_f", sa.Float(), nullable=True))
    op.add_column("materials_base_case_average_prop", sa.Column("thermal_conductivity_f", sa.Float(), nullable=True))
    op.add_column(
        "materials_base_case_average_prop", sa.Column("volumetric_heat_capacity_f", sa.Float(), nullable=True)
    )

    op.execute(
        """
        UPDATE materials_base_case_average_prop
        SET
            thermal_expansion_c = 0.0,
            thermal_conductivity_c = 0.0,
            volumetric_heat_capacity_c = 0.0,
            friction_angle_c = 0.0,
            cohesion_c = 0.0,
            thermal_expansion_f = 0.0,
            thermal_conductivity_f = 0.0,
            volumetric_heat_capacity_f = 0.0
    """
    )

    op.alter_column("materials_base_case_average_prop", "thermal_expansion_c", nullable=False)
    op.alter_column("materials_base_case_average_prop", "thermal_conductivity_c", nullable=False)
    op.alter_column("materials_base_case_average_prop", "volumetric_heat_capacity_c", nullable=False)
    op.alter_column("materials_base_case_average_prop", "friction_angle_c", nullable=False)
    op.alter_column("materials_base_case_average_prop", "cohesion_c", nullable=False)
    op.alter_column("materials_base_case_average_prop", "thermal_expansion_f", nullable=False)
    op.alter_column("materials_base_case_average_prop", "thermal_conductivity_f", nullable=False)
    op.alter_column("materials_base_case_average_prop", "volumetric_heat_capacity_f", nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("materials_base_case_average_prop", "volumetric_heat_capacity_f")
    op.drop_column("materials_base_case_average_prop", "thermal_conductivity_f")
    op.drop_column("materials_base_case_average_prop", "thermal_expansion_f")
    op.drop_column("materials_base_case_average_prop", "cohesion_c")
    op.drop_column("materials_base_case_average_prop", "friction_angle_c")
    op.drop_column("materials_base_case_average_prop", "volumetric_heat_capacity_c")
    op.drop_column("materials_base_case_average_prop", "thermal_conductivity_c")
    op.drop_column("materials_base_case_average_prop", "thermal_expansion_c")
    # ### end Alembic commands ###
